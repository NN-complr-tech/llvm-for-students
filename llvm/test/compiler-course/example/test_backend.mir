# RUN: llc -mtriple x86_64-unknown-linux-gnu --load=%llvmshlibdir/ExamplePass_Ivanov_Ivan_FIIT0_BACKEND%shlibext \
# RUN: -run-pass=example-x86  %s -o - | FileCheck %s


# Source files

# test.cpp
#
# [[nodiscard]] bool isEven(int value) noexcept { return value % 2 == 0; }

# test.ll (-O2)
#
# define dso_local noundef zeroext i1 @_Z6isEveni(i32 noundef %0) local_unnamed_addr {
#  %2 = and i32 %0, 1
#  %3 = icmp eq i32 %2, 0
#  ret i1 %3
# }


--- |
  ; ModuleID = 'test.ll'
  source_filename = "test.ll"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
  
  define dso_local noundef zeroext i1 @_Z6isEveni(i32 noundef %0) local_unnamed_addr {
    %2 = and i32 %0, 1
    %3 = icmp eq i32 %2, 0
    ret i1 %3
  }

...
---
# CHECK: _Z6isEveni
# CHECK: name:            _Z6isEveni
name:            _Z6isEveni
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   true
failsVerification: false
tracksDebugUserValues: true
registers:       []
liveins:
  - { reg: '$edi', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 0
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  isCalleeSavedInfoValid: true
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo:
  amxProgModel:    None
body:             |
  bb.0 (%ir-block.1):
    liveins: $edi
  
    ; CHECK: TEST8ri renamable $dil, 1, implicit-def $eflags, implicit killed $edi
    ; CHECK-NEXT: renamable $al = SETCCr 4, implicit killed $eflags
    ; CHECK-NEXT: RET64 $al

    TEST8ri renamable $dil, 1, implicit-def $eflags, implicit killed $edi
    renamable $al = SETCCr 4, implicit killed $eflags
    RET64 $al

...
